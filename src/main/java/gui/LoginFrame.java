package gui;

import service.UserService;
import model.User;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Form ƒëƒÉng nh·∫≠p ·ª©ng d·ª•ng
 */
public class LoginFrame extends JFrame {
    private UserService userService;
    private JTextField txtUsername;
    private JPasswordField txtPassword;
    private JButton btnLogin;
    private JButton btnExit;
    
    public LoginFrame() {
        userService = new UserService();
        initComponents();
        setupLayout();
        setupEvents();
    }
    
    private void initComponents() {
        setTitle("ƒêƒÉng nh·∫≠p - Qu·∫£n l√Ω C·ª≠a h√†ng S√°ch");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(false);
        
        // T·∫°o components
        txtUsername = new JTextField(20);
        txtPassword = new JPasswordField(20);
        btnLogin = new JButton("ƒêƒÉng nh·∫≠p");
        btnExit = new JButton("Tho√°t");
        
        // Thi·∫øt l·∫≠p font
        Font font = new Font("Segoe UI", Font.PLAIN, 14);
        txtUsername.setFont(font);
        txtPassword.setFont(font);
        btnLogin.setFont(font);
        btnExit.setFont(font);
        
        // Thi·∫øt l·∫≠p m√†u s·∫Øc
        btnLogin.setBackground(new Color(0, 123, 255));
        btnLogin.setForeground(Color.WHITE);
        btnExit.setBackground(new Color(108, 117, 125));
        btnExit.setForeground(Color.WHITE);
        
        // Focus m·∫∑c ƒë·ªãnh
        txtUsername.requestFocus();
    }
    
    private void setupLayout() {
        setLayout(new BorderLayout());
        
        // Panel ch√≠nh
        JPanel mainPanel = new JPanel(new GridBagLayout());
        mainPanel.setBorder(BorderFactory.createEmptyBorder(30, 30, 30, 30));
        mainPanel.setBackground(Color.WHITE);
        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        
        // Ti√™u ƒë·ªÅ
        JLabel lblTitle = new JLabel("QU·∫¢N L√ù C·ª¨A H√ÄNG S√ÅCH");
        lblTitle.setFont(new Font("Segoe UI", Font.BOLD, 24));
        lblTitle.setForeground(new Color(0, 123, 255));
        lblTitle.setHorizontalAlignment(SwingConstants.CENTER);
        gbc.gridx = 0; gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(lblTitle, gbc);
        
        // Icon ho·∫∑c logo (c√≥ th·ªÉ th√™m sau)
        JLabel lblIcon = new JLabel("üìö");
        lblIcon.setFont(new Font("Segoe UI", Font.PLAIN, 48));
        lblIcon.setHorizontalAlignment(SwingConstants.CENTER);
        gbc.gridx = 0; gbc.gridy = 1;
        gbc.gridwidth = 2;
        mainPanel.add(lblIcon, gbc);
        
        // Username
        JLabel lblUsername = new JLabel("T√™n ƒëƒÉng nh·∫≠p:");
        lblUsername.setFont(new Font("Segoe UI", Font.BOLD, 14));
        gbc.gridx = 0; gbc.gridy = 2;
        gbc.gridwidth = 1;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(lblUsername, gbc);
        
        gbc.gridx = 1; gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(txtUsername, gbc);
        
        // Password
        JLabel lblPassword = new JLabel("M·∫≠t kh·∫©u:");
        lblPassword.setFont(new Font("Segoe UI", Font.BOLD, 14));
        gbc.gridx = 0; gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(lblPassword, gbc);
        
        gbc.gridx = 1; gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(txtPassword, gbc);
        
        // Buttons
        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 10, 0));
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.add(btnLogin);
        buttonPanel.add(btnExit);
        
        gbc.gridx = 0; gbc.gridy = 4;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(20, 10, 10, 10);
        mainPanel.add(buttonPanel, gbc);
        
        add(mainPanel, BorderLayout.CENTER);
        
        // Th√¥ng tin demo
        JPanel infoPanel = new JPanel();
        infoPanel.setBackground(new Color(248, 249, 250));
        infoPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        
        JLabel lblInfo = new JLabel("<html><center><b>T√†i kho·∫£n demo:</b><br>" +
                "Admin: admin/admin123<br>" +
                "User: user/user123</center></html>");
        lblInfo.setFont(new Font("Segoe UI", Font.PLAIN, 12));
        lblInfo.setForeground(new Color(108, 117, 125));
        infoPanel.add(lblInfo);
        
        add(infoPanel, BorderLayout.SOUTH);
        
        pack();
        setLocationRelativeTo(null);
    }
    
    private void setupEvents() {
        // ƒêƒÉng nh·∫≠p
        btnLogin.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                login();
            }
        });
        
        // Tho√°t
        btnExit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.exit(0);
            }
        });
        
        // Enter ƒë·ªÉ ƒëƒÉng nh·∫≠p
        txtPassword.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                login();
            }
        });
        
        // Escape ƒë·ªÉ tho√°t
        KeyStroke escapeKeyStroke = KeyStroke.getKeyStroke("ESCAPE");
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(escapeKeyStroke, "ESCAPE");
        getRootPane().getActionMap().put("ESCAPE", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.exit(0);
            }
        });
    }
    
    private void login() {
        String username = txtUsername.getText().trim();
        String password = new String(txtPassword.getPassword());
        
        if (username.isEmpty()) {
            showError("Vui l√≤ng nh·∫≠p t√™n ƒëƒÉng nh·∫≠p!");
            txtUsername.requestFocus();
            return;
        }
        
        if (password.isEmpty()) {
            showError("Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u!");
            txtPassword.requestFocus();
            return;
        }
        
        // Hi·ªÉn th·ªã loading
        btnLogin.setEnabled(false);
        btnLogin.setText("ƒêang x·ª≠ l√Ω...");
        
        // X√°c th·ª±c trong thread ri√™ng ƒë·ªÉ kh√¥ng block UI
        SwingWorker<User, Void> worker = new SwingWorker<User, Void>() {
            @Override
            protected User doInBackground() throws Exception {
                return userService.authenticate(username, password);
            }
            
            @Override
            protected void done() {
                try {
                    User user = get();
                    
                    if (user != null) {
                        // ƒêƒÉng nh·∫≠p th√†nh c√¥ng
                        dispose();
                        SwingUtilities.invokeLater(() -> {
                            new MainFrame(user).setVisible(true);
                        });
                    } else {
                        showError("T√™n ƒëƒÉng nh·∫≠p ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng!");
                        txtPassword.setText("");
                        txtUsername.requestFocus();
                    }
                } catch (Exception e) {
                    showError("L·ªói k·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu!");
                    e.printStackTrace();
                } finally {
                    btnLogin.setEnabled(true);
                    btnLogin.setText("ƒêƒÉng nh·∫≠p");
                }
            }
        };
        
        worker.execute();
    }
    
    private void showError(String message) {
        JOptionPane.showMessageDialog(this, message, "L·ªói", JOptionPane.ERROR_MESSAGE);
    }
    
    public static void main(String[] args) {
        // Thi·∫øt l·∫≠p Look and Feel
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeel());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        SwingUtilities.invokeLater(() -> {
            new LoginFrame().setVisible(true);
        });
    }
}
